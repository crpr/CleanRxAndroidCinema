apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.vanniktech.android.apk.size'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'realm-android'

def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries;
def test = rootProject.ext.testingLibraries;

android {
    compileSdkVersion cfg.compileVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        applicationId               cfg.package
        minSdkVersion               cfg.minSdk
        targetSdkVersion            cfg.targetSdk
        versionCode                 cfg.version_code
        versionName                 cfg.version_name
        testInstrumentationRunner   "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        prod {
            applicationId cfg.getAt("applicationId")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets']
            resources.srcDirs = ['src/main/configurations']
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            manifest.srcFile 'src/main/AndroidManifest.xml'
            jniLibs.srcDirs = ['libs']
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor' // butterknife
    }
}

dependencies {

    compile "com.github.bumptech.glide:glide:${libs.glide}"
    compile "com.jakewharton:butterknife:${libs.butterknife}"
    compile "io.reactivex:rxandroid:${libs.rxandroid}"
    compile "io.reactivex:rxjava:${libs.rxjava}"
    compile ("com.squareup.retrofit2:retrofit:${libs.retrofit}") {
            exclude module: 'okhttp'
    }
    compile "com.squareup.okhttp3:okhttp:${libs.okhttp}"
    compile "com.squareup.retrofit2:converter-gson:${libs.gsonConverter}"
    compile "com.squareup.retrofit2:adapter-rxjava:${libs.rxAdapter}"

    compile "com.google.dagger:dagger:${libs.dagger}"
    compile "org.glassfish:javax.annotation:${libs.javax_annotation}"

    apt "com.google.dagger:dagger-compiler:${libs.dagger}"
    apt "com.jakewharton:butterknife-compiler:${libs.butterknife}"

    // Android
    compile "com.android.support:design:${libs.supportVersion}"
    compile "com.android.support:cardview-v7:${libs.supportVersion}"
    compile "com.android.support:support-v4:${libs.supportVersion}"

    // Test
    testCompile "org.mockito:mockito-core:$test.mockito"
    testCompile "junit:junit:$test.junit"

    androidTestCompile "com.android.support.test:runner:$test.espressoRunner"
    androidTestCompile "com.android.support.test:rules:$test.espressoRules"
    androidTestCompile("com.android.support.test.espresso:espresso-core:$test.espresso") {
        exclude group: 'javax.inject'
    }

    androidTestCompile "com.android.support.test.espresso:espresso-intents:$test.espresso"
    androidTestCompile ("com.android.support.test.espresso:espresso-contrib:$test.espresso") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$libs.supportVersion"
}